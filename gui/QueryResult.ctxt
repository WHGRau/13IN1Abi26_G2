#BlueJ class context
comment0.target=QueryResult
comment0.text=\n\ <p>\n\ Materialien\ zu\ den\ zentralen\ NRW-Abiturpruefungen\ im\ Fach\ Informatik\ ab\ 2018.\n\ </p>\n\ <p>\n\ Klasse\ QueryResult\n\ </p>\n\ <p>\n\ Ein\ Objekt\ der\ Klasse\ QueryResult\ stellt\ die\ Ergebnistabelle\ einer\ Datenbankanfrage\ mit\ Hilfe\ \n\ der\ Klasse\ DatabaseConnector\ dar.\ Objekte\ dieser\ Klasse\ werden\ nur\ von\ der\ Klasse\ DatabaseConnector\ erstellt.\ \n\ Die\ Klasse\ verfuegt\ ueber\ keinen\ oeffentlichen\ Konstruktor.\n\ </p>\n\ \n\ @author\ Qualitaets-\ und\ UnterstuetzungsAgentur\ -\ Landesinstitut\ fuer\ Schule\n\ @version\ 2015-01-31\n
comment1.params=pData\ pColumnNames\ pColumnTypes
comment1.target=QueryResult(java.lang.String[][],\ java.lang.String[],\ java.lang.String[])
comment1.text=\n\ Paketinterner\ Konstruktor.\n
comment2.params=
comment2.target=java.lang.String[][]\ getData()
comment2.text=\n\ Die\ Anfrage\ liefert\ die\ Eintraege\ der\ Ergebnistabelle\ als\ zweidimensionales\ Feld\n\ vom\ Typ\ String.\ Der\ erste\ Index\ des\ Feldes\ stellt\ die\ Zeile\ und\ der\ zweite\ die\ \n\ Spalte\ dar\ (d.h.\ Object[zeile][spalte]).\n
comment3.params=
comment3.target=java.lang.String[]\ getColumnNames()
comment3.text=\n\ Die\ Anfrage\ liefert\ die\ Bezeichner\ der\ Spalten\ der\ Ergebnistabelle\ als\ Feld\ vom\ \n\ Typ\ String\ zurueck.\n
comment4.params=
comment4.target=java.lang.String[]\ getColumnTypes()
comment4.text=\n\ Die\ Anfrage\ liefert\ die\ Typenbezeichnung\ der\ Spalten\ der\ Ergebnistabelle\ als\ Feld\ \n\ vom\ Typ\ String\ zurueck.\ Die\ Bezeichnungen\ entsprechen\ den\ Angaben\ in\ der\ MySQL-Datenbank.\n
comment5.params=
comment5.target=int\ getRowCount()
comment5.text=\n\ Die\ Anfrage\ liefert\ die\ Anzahl\ der\ Zeilen\ der\ Ergebnistabelle\ als\ Integer.\n
comment6.params=
comment6.target=int\ getColumnCount()
comment6.text=\n\ Die\ Anfrage\ liefert\ die\ Anzahl\ der\ Spalten\ der\ Ergebnistabelle\ als\ Integer.\n
numComments=7
